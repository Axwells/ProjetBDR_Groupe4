# Generated by Django 5.1.4 on 2024-12-20 12:26

import datetime
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AppUser",
            fields=[
                (
                    "email",
                    models.CharField(
                        db_column="email",
                        max_length=320,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("username", models.CharField(db_column="username", max_length=80)),
                ("password", models.CharField(db_column="password", max_length=80)),
                (
                    "isSuperuser",
                    models.BooleanField(db_column="isSuperUser", default=False),
                ),
            ],
            options={
                "db_table": "AppUser",
            },
        ),
        migrations.CreateModel(
            name="Brand",
            fields=[
                (
                    "name",
                    models.CharField(
                        db_column="name",
                        max_length=50,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "image",
                    models.CharField(
                        blank=True, db_column="image", max_length=1030, null=True
                    ),
                ),
            ],
            options={
                "db_table": "Brand",
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "name",
                    models.CharField(
                        db_column="name",
                        max_length=80,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
            ],
            options={
                "db_table": "Category",
            },
        ),
        migrations.CreateModel(
            name="Engine",
            fields=[
                (
                    "modelName",
                    models.CharField(
                        db_column="modelName",
                        max_length=80,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("horsePower", models.PositiveIntegerField(db_column="horsePower")),
                (
                    "position",
                    models.CharField(
                        choices=[
                            ("front", "Front"),
                            ("middle", "Middle"),
                            ("rear", "Rear"),
                            ("underfloor", "Underfloor"),
                        ],
                        db_column="position",
                        max_length=20,
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        db_column="price", decimal_places=2, max_digits=9
                    ),
                ),
                (
                    "nameBrand",
                    models.ForeignKey(
                        db_column="nameBrand",
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="app.brand",
                    ),
                ),
            ],
            options={
                "db_table": "Engine",
            },
        ),
        migrations.CreateModel(
            name="Option",
            fields=[
                (
                    "name",
                    models.CharField(
                        db_column="name",
                        max_length=100,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
            ],
            options={
                "db_table": "Option",
            },
        ),
        migrations.CreateModel(
            name="Brake",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="id", primary_key=True, serialize=False),
                ),
                ("model", models.CharField(db_column="model", max_length=80)),
                ("abs", models.BooleanField(db_column="abs")),
                (
                    "price",
                    models.DecimalField(
                        db_column="price", decimal_places=2, max_digits=7
                    ),
                ),
            ],
            options={
                "db_table": "Brake",
                "constraints": [
                    models.CheckConstraint(
                        condition=models.Q(("price__gt", 0)), name="CK_Brake_price"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="Car",
            fields=[
                (
                    "modelName",
                    models.CharField(
                        db_column="modelName",
                        max_length=80,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "numberOfSeats",
                    models.PositiveIntegerField(db_column="numberOfSeats"),
                ),
                ("releaseDate", models.DateField(db_column="releaseDate")),
                (
                    "defaultPrice",
                    models.DecimalField(
                        db_column="defaultPrice", decimal_places=2, max_digits=12
                    ),
                ),
                (
                    "nameBrand",
                    models.ForeignKey(
                        db_column="nameBrand",
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="cars",
                        to="app.brand",
                    ),
                ),
            ],
            options={
                "db_table": "Car",
            },
        ),
        migrations.CreateModel(
            name="Electric",
            fields=[
                (
                    "modelNameEngine",
                    models.OneToOneField(
                        db_column="modelNameEngine",
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="app.engine",
                    ),
                ),
                ("maxPower", models.PositiveIntegerField(db_column="maxPower")),
                (
                    "batteryDistanceCapacity",
                    models.PositiveIntegerField(db_column="batteryDistanceCapacity"),
                ),
            ],
            options={
                "db_table": "Electric",
            },
        ),
        migrations.CreateModel(
            name="Gas",
            fields=[
                (
                    "modelNameEngine",
                    models.OneToOneField(
                        db_column="modelNameEngine",
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="app.engine",
                    ),
                ),
                (
                    "numberOfCylinders",
                    models.PositiveIntegerField(db_column="numberOfCylinders"),
                ),
                (
                    "engineDisplacement",
                    models.DecimalField(
                        db_column="engineDisplacement", decimal_places=1, max_digits=3
                    ),
                ),
            ],
            options={
                "db_table": "Gas",
            },
        ),
        migrations.CreateModel(
            name="Image",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.CharField(db_column="image", max_length=1030)),
                (
                    "modelNameCar",
                    models.ForeignKey(
                        db_column="modelNameCar",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.car",
                    ),
                ),
            ],
            options={
                "db_table": "Image",
            },
        ),
        migrations.CreateModel(
            name="Modification",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="id", primary_key=True, serialize=False),
                ),
                ("text", models.CharField(db_column="text", max_length=500)),
                ("isAccepted", models.BooleanField(db_column="isAccepted", null=True)),
                (
                    "emailUserManages",
                    models.ForeignKey(
                        db_column="emailUserManages",
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="managedModifications",
                        to="app.appuser",
                    ),
                ),
                (
                    "emailUserSuggests",
                    models.ForeignKey(
                        db_column="emailUserSuggests",
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="suggestedModifications",
                        to="app.appuser",
                    ),
                ),
                (
                    "modelNameCar",
                    models.ForeignKey(
                        db_column="modelNameCar",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.car",
                    ),
                ),
            ],
            options={
                "db_table": "Modification",
            },
        ),
        migrations.CreateModel(
            name="CarOption",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "optionPrice",
                    models.DecimalField(
                        db_column="optionPrice", decimal_places=2, max_digits=7
                    ),
                ),
                (
                    "modelNameCar",
                    models.ForeignKey(
                        db_column="modelNameCar",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.car",
                    ),
                ),
                (
                    "nameOption",
                    models.ForeignKey(
                        db_column="nameOption",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.option",
                    ),
                ),
            ],
            options={
                "db_table": "Car_Option",
            },
        ),
        migrations.CreateModel(
            name="Performance",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="id", primary_key=True, serialize=False),
                ),
                ("maxSpeed", models.PositiveIntegerField(db_column="maxSpeed")),
                (
                    "zeroToHundredTime",
                    models.DecimalField(
                        db_column="zeroToHundredTime", decimal_places=2, max_digits=4
                    ),
                ),
            ],
            options={
                "db_table": "Performance",
                "constraints": [
                    models.CheckConstraint(
                        condition=models.Q(("maxSpeed__gt", 0), ("maxSpeed__lte", 600)),
                        name="CK_Performance_maxSpeed",
                    ),
                    models.CheckConstraint(
                        condition=models.Q(("zeroToHundredTime__gt", 0)),
                        name="CK_Performance_zeroToHundredTime",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Specification",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="id", primary_key=True, serialize=False),
                ),
                (
                    "idBrake",
                    models.ForeignKey(
                        db_column="idBrake",
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="app.brake",
                    ),
                ),
                (
                    "idPerformance",
                    models.ForeignKey(
                        db_column="idPerformance",
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="app.performance",
                    ),
                ),
                (
                    "modelNameCar",
                    models.ForeignKey(
                        db_column="modelNameCar",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.car",
                    ),
                ),
            ],
            options={
                "db_table": "Specification",
            },
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="id", primary_key=True, serialize=False),
                ),
                ("title", models.CharField(db_column="title", max_length=30)),
                (
                    "content",
                    models.CharField(
                        blank=True, db_column="content", max_length=1000, null=True
                    ),
                ),
                ("grade", models.PositiveIntegerField(db_column="grade")),
                ("date", models.DateField(db_column="date")),
                (
                    "emailUser",
                    models.ForeignKey(
                        db_column="emailUser",
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="app.appuser",
                    ),
                ),
                (
                    "idSpecification",
                    models.ForeignKey(
                        db_column="idSpecification",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.specification",
                    ),
                ),
            ],
            options={
                "db_table": "Review",
            },
        ),
        migrations.CreateModel(
            name="CategorySpecification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nameCategory",
                    models.ForeignKey(
                        db_column="nameCategory",
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="app.category",
                    ),
                ),
                (
                    "idSpecification",
                    models.ForeignKey(
                        db_column="idSpecification",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.specification",
                    ),
                ),
            ],
            options={
                "db_table": "Category_Specification",
            },
        ),
        migrations.CreateModel(
            name="SpecificationEngine",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "idSpecification",
                    models.ForeignKey(
                        db_column="idSpecification",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.specification",
                    ),
                ),
                (
                    "modelNameEngine",
                    models.ForeignKey(
                        db_column="modelNameEngine",
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="app.engine",
                    ),
                ),
            ],
            options={
                "db_table": "Specification_Engine",
            },
        ),
        migrations.CreateModel(
            name="Transmission",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="id", primary_key=True, serialize=False),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("automatic", "Automatic"), ("manual", "Manual")],
                        db_column="type",
                        max_length=10,
                    ),
                ),
                (
                    "numberOfGears",
                    models.PositiveIntegerField(db_column="numberOfGears"),
                ),
                (
                    "drivetrain",
                    models.CharField(
                        choices=[
                            ("rwd", "RWD"),
                            ("fwd", "FWD"),
                            ("awd", "AWD"),
                            ("4wd", "4WD"),
                        ],
                        db_column="drivetrain",
                        max_length=5,
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        db_column="price", decimal_places=2, max_digits=8
                    ),
                ),
            ],
            options={
                "db_table": "Transmission",
                "constraints": [
                    models.CheckConstraint(
                        condition=models.Q(
                            ("numberOfGears__gt", 0), ("numberOfGears__lte", 10)
                        ),
                        name="CK_Transmission_numberOfGears",
                    ),
                    models.CheckConstraint(
                        condition=models.Q(("price__gt", 0)),
                        name="CK_Transmission_price",
                    ),
                ],
            },
        ),
        migrations.AddField(
            model_name="specification",
            name="idTransmission",
            field=models.ForeignKey(
                db_column="idTransmission",
                on_delete=django.db.models.deletion.RESTRICT,
                to="app.transmission",
            ),
        ),
        migrations.CreateModel(
            name="UserCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "emailUser",
                    models.ForeignKey(
                        db_column="emailUser",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.appuser",
                    ),
                ),
                (
                    "nameCategory",
                    models.ForeignKey(
                        db_column="nameCategory",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.category",
                    ),
                ),
            ],
            options={
                "db_table": "User_Category",
            },
        ),
        migrations.AddConstraint(
            model_name="car",
            constraint=models.CheckConstraint(
                condition=models.Q(("numberOfSeats__gte", 1)),
                name="CK_Car_numberOfSeats",
            ),
        ),
        migrations.AddConstraint(
            model_name="car",
            constraint=models.CheckConstraint(
                condition=models.Q(("releaseDate__lte", datetime.date(2024, 12, 20))),
                name="CK_Car_releaseDate",
            ),
        ),
        migrations.AddConstraint(
            model_name="car",
            constraint=models.CheckConstraint(
                condition=models.Q(("defaultPrice__gt", 0)), name="CK_Car_defaultPrice"
            ),
        ),
        migrations.AddConstraint(
            model_name="electric",
            constraint=models.CheckConstraint(
                condition=models.Q(("maxPower__gt", 0)), name="CK_Electric_maxPower"
            ),
        ),
        migrations.AddConstraint(
            model_name="electric",
            constraint=models.CheckConstraint(
                condition=models.Q(("batteryDistanceCapacity__gt", 0)),
                name="CK_Electric_batteryDistanceCapacity",
            ),
        ),
        migrations.AddConstraint(
            model_name="gas",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    ("numberOfCylinders__gte", 0), ("numberOfCylinders__lte", 18)
                ),
                name="CK_Gas_numberOfCylinders",
            ),
        ),
        migrations.AddConstraint(
            model_name="engine",
            constraint=models.CheckConstraint(
                condition=models.Q(("horsePower__gt", 0), ("horsePower__lt", 3000)),
                name="CK_Engine_horsePower",
            ),
        ),
        migrations.AddConstraint(
            model_name="engine",
            constraint=models.CheckConstraint(
                condition=models.Q(("price__gt", 0)), name="CK_Engine_price"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="image",
            unique_together={("modelNameCar", "image")},
        ),
        migrations.AddConstraint(
            model_name="caroption",
            constraint=models.CheckConstraint(
                condition=models.Q(("optionPrice__gte", 0)),
                name="CK_Car_Option_optionPrice",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="caroption",
            unique_together={("modelNameCar", "nameOption")},
        ),
        migrations.AddConstraint(
            model_name="review",
            constraint=models.CheckConstraint(
                condition=models.Q(("grade__gt", 0), ("grade__lte", 5)),
                name="CK_Review_grade",
            ),
        ),
        migrations.AddConstraint(
            model_name="review",
            constraint=models.CheckConstraint(
                condition=models.Q(("date__lte", datetime.date(2024, 12, 20))),
                name="CK_Review_date",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="categoryspecification",
            unique_together={("idSpecification", "nameCategory")},
        ),
        migrations.AlterUniqueTogether(
            name="specificationengine",
            unique_together={("idSpecification", "modelNameEngine")},
        ),
        migrations.AlterUniqueTogether(
            name="usercategory",
            unique_together={("emailUser", "nameCategory")},
        ),
    ]
